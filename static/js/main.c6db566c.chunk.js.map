{"version":3,"sources":["components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Searchbar/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","API/constants.js","components/ImageGallery/ImageGallery.js","API/images-api.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","onSubmit","useState","query","setQuery","className","s","form","event","preventDefault","trim","toast","error","type","button","buttonLabel","input","autoComplete","autoFocus","value","placeholder","onChange","currentTarget","toLowerCase","Searchbar","searchbar","ImageGalleryItem","pictures","onClick","map","id","webformatURL","item","src","alt","API_KEY","BASE_URL","ImageGallery","page","toggleModal","setModalImage","handleStatus","status","setPictures","useEffect","name","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","result","hits","prevPictures","catch","message","gallery","e","currentPicture","find","picture","Number","largeImageURL","Button","modalRoot","document","querySelector","Modal","onClose","children","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","App","setPage","showModal","setShowModal","setLargeImageURL","setStatus","useCallback","autoClose","color","height","width","timeout","setTimeout","scroll","scrollToBottom","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6db566c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3BqIs\",\"modal\":\"Modal_modal__2yoeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2M6GL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__3ToKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__3hbZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1S2wt\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SearchForm.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function SearchForm({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n  const handleNameChange = event => {\r\n    setQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (query.trim() === '') {\r\n      return toast.error('What are you looking for?');\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <button type=\"submit\" className={s.button}>\r\n        <span className={s.buttonLabel}>Search</span>\r\n      </button>\r\n\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        value={query}\r\n        placeholder=\"Search images and photos\"\r\n        onChange={handleNameChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\nimport SearchForm from './SearchForm';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <SearchForm onSubmit={onSubmit} />\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({\r\n  pictures,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <>\r\n      {pictures.map(({ id, webformatURL }) => (\r\n        <li className={s.item} key={id}>\r\n          <img\r\n            id={id}\r\n            src={webformatURL}\r\n            alt=\"\"\r\n            onClick={onClick}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  pictures: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","export const API_KEY = '23541040-6cd4bf6b7c4617c11fc95022a';\r\nexport const BASE_URL = 'https://pixabay.com/api';\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport fetchImages from '../../API/images-api';\r\n\r\nexport default function ImageGallery({\r\n  query,\r\n  page,\r\n  toggleModal,\r\n  setModalImage,\r\n  handleStatus,\r\n  status,\r\n}) {\r\n  const [pictures, setPictures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n    handleStatus('pending');\r\n    fetchImages(query, page)\r\n      .then(result => {\r\n        if (page === 1) {\r\n          setPictures(result.hits);\r\n        } else {\r\n          setPictures(prevPictures => [\r\n            ...prevPictures,\r\n            ...result.hits,\r\n          ]);\r\n        }\r\n        handleStatus('resolved');\r\n      })\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n      });\r\n  }, [query, page, handleStatus]);\r\n\r\n  const handleImageClick = e => {\r\n    const currentPicture = pictures.find(\r\n      picture => picture.id === Number(e.currentTarget.id),\r\n    );\r\n    if (currentPicture) {\r\n      toggleModal();\r\n      setModalImage(currentPicture.largeImageURL);\r\n    }\r\n  };\r\n\r\n  return (\r\n    status !== 'idle' && (\r\n      <ul className={s.gallery}>\r\n        <ImageGalleryItem\r\n          pictures={pictures}\r\n          onClick={handleImageClick}\r\n        />\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n  setModalImage: PropTypes.func.isRequired,\r\n  handleStatus: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import { BASE_URL } from './constants';\r\nimport { API_KEY } from './constants';\r\n\r\nexport default function fetchImages(name, page = 1) {\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`There are no images ${name}`),\r\n    );\r\n  });\r\n}\r\n","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={s.button}\r\n      onClick={onClick}\r\n    >\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  return createPortal(\r\n    <div\r\n      className={s.overlay}\r\n      onClick={handleBackdropClick}\r\n    >\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from 'components/ImageGallery';\r\nimport Button from 'components/Button/Button';\r\nimport Modal from 'components/Modal';\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  const onLoadMore = () => {\r\n    setPage(page => page + 1);\r\n    setStatus('pending');\r\n    setTimeout(() => {\r\n      scroll.scrollToBottom();\r\n    }, 700);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(showModal => !showModal);\r\n  };\r\n\r\n  const setModalImage = largeImageURL => {\r\n    setLargeImageURL(largeImageURL);\r\n  };\r\n\r\n  const handleFormSubmit = query => {\r\n    setQuery(query);\r\n    setPage(1);\r\n    setStatus('idle');\r\n  };\r\n\r\n  const handleStatus = useCallback(\r\n    status => setStatus(status),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ToastContainer autoClose={2000} />\r\n      <ImageGallery\r\n        query={query}\r\n        toggleModal={toggleModal}\r\n        setModalImage={setModalImage}\r\n        page={page}\r\n        handleStatus={handleStatus}\r\n        status={status}\r\n      />\r\n\r\n      {status === 'pending' && (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#3f51b5\"\r\n          height={50}\r\n          width={80}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n\r\n      {status === 'resolved' && (\r\n        <Button onClick={onLoadMore} />\r\n      )}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__1sdbS\",\"button\":\"SearchForm_button__jlhFh\",\"buttonLabel\":\"SearchForm_buttonLabel__9PdY-\",\"input\":\"SearchForm_input__39FCg\"};"],"sourceRoot":""}